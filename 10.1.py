#Сформувати функцію, що буде обчислювати факторіал заданого користувачем
#натурального числа n через рекурсію
#Драч Ольга Олександрівна, 122-Д

import timeit
def h(r):   #Створюємо цикл для виведення на кожному етапі
    v = 1    #Лічильник
    while r > 1:
        v *= r   #Рекурсія
        r -= 1
    return v
k = int(input('Введіть число:'))
print('Факторіал вашого числа:')
print(h(k))
t = timeit.timeit('"-".join(str(n) for n in range(100))', number=9999)
print(f'Програма працювала {t} секунд')

''''------------------------------------------------------------'''''

def g(j):   #Створюємо цикл для виведення на кожному етапі
    if j == 0:
        return 1
    else:
        return g (j-1) * j   #Тобто саме через себе
e = int(input('Введіть число:'))
print('Факторіал вашого числа:')
print(g (e))
t = timeit.timeit('"-".join(str(n) for n in range(100))', number=9999)
print(f'Програма працювала {t} секунд')


#Написання другої програми зайняло майже на 17 хвилин менше,
#також друга програма краще читається. 
#Cтруктура другої програми мінше першої. 
#Час виконання:рекурсія працює швидше, а ось щодо пам'яті то ітерація
#займає менше ніж рекурсія.
