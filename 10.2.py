#Сформувати функцію для обчислення цифрового кореню натурального числа.
#Цифровий корінь отримується наступним чином: необхідно скласти всі цифри заданого
#числа, потім скласти всі цифри знайденої суми і повторювати процес до тих пір,
#поки сума не буде дорівнювати однозначному числу, що і буде цифровим коренем 
#заданого числа.
#Драч Ольга Олександрівна, 122-Д

import timeit
def j(e):    #Функція для суми
    g = 0
    if e <= 9:
        return e
    else:
       while e > 10:
           g += e % 10
           e //= 10
           e += g
       return e
d = int(input('Введіть число:'))
print('Ваш цифровий корінь:')
print(j(d))
t = timeit.timeit('"-".join(str(n) for n in range(100))', number=9999)
print(f'Програма працювала {t} секунд')

''''---------------------------------------------------------------'''''

def r(q):    #Рекурсивна сума
    if q <= 9:
        return q
    else:
        return r (q//10) + q % 10
def y(q):   #Перевірка на однозначність числа
    if q <= 9:
        return q
    else:
        return y(r(q))
n = int(input('Введіть число:'))
print('Ваш цифровий корінь:')
print(y(n))
t = timeit.timeit('"-".join(str(n) for n in range(100))', number=9999)
print(f'Програма працювала {t} секунд')

#Написання першої програми зайняло на годинку менше, за другу. 
#Перша читається краще другої.
#У цій програмі ітерація працює швидше, і займає менше пам'яті ніж рекурсія.
